{"version":3,"sources":["../build/app.es6.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["let game = {};\n;let angleToDirection = ({angle, distance}) => {\n  return {\n    x: (distance * Math.cos(angle)),\n    y: (distance * Math.sin(angle))\n  };\n};\n\nclass Creature {\n  constructor({position={x:0, y:0}, color='red', length=10, direction}) {\n\n    this.currentPosition = position;\n    this.segmentPositions = [position];\n\n    this.color = color;\n\n    this.stepDistance = 1;\n    this.direction = angleToDirection({angle: direction, distance: this.stepDistance});\n\n    this.length = length;\n\n  }\n\n  move() {\n    let newSegmentPosition = {\n      x: (this.currentPosition.x += this.direction.x),\n      y: (this.currentPosition.y += this.direction.y),\n    };\n    this.segmentPositions.unshift(newSegmentPosition);\n    if(this.segmentPositions.length > this.length) {\n      this.segmentPositions.pop();\n    }\n  }\n\n  updateDirection(angle) {\n    let newDirection = angleToDirection({angle: angle, distance: this.stepDistance});\n    this.direction = newDirection;\n  }\n\n  radius() {\n    return 5+(this.length/10);\n  }\n\n  sprites() {\n    return this.segments();\n  }\n\n  segment(position) {\n    return new Sprite({\n      type: 'circle',\n      radius: this.radius(),\n      position: {x: position.x, y: position.y},\n      color: this.color\n    });\n  }\n\n  segments() {\n    let creature = this;\n    return this.segmentPositions.map(function(position){\n      return creature.segment(position);\n    });\n  }\n\n\n}\n;let engineService = () => {\n  let engine = {};\n\n  engine.initialize = ({canvas}) => {\n    engine.canvas = canvas;\n  };\n\n  engine.logCanvas = () => { console.log(engine.canvas); };\n\n  let renderService = () => {\n    let render = {};\n\n\n\n    let addSprite = (sprite, spriteMap) => {\n      if(!spriteMap.has(sprite.color)){\n        spriteMap.set(sprite.color, []);\n      }\n      spriteMap.get(sprite.color).push(sprite);\n    };\n\n    let addSprites = (sprites, spriteMap) => {\n      sprites.forEach((sprite)=>{\n        addSprite(sprite, spriteMap);\n      });\n    };\n\n\n\n    let entities = {\n      all: []\n    };\n\n    entities.sprites = () => {\n      let spritesMap = new Map();\n      entities.all.forEach((entity) => {\n        addSprites(entity.sprites(), spritesMap);\n      });\n      // console.log(spritesMap.values());\n      return spritesMap;\n    };\n\n    entities.update = () => {\n      entities.all.forEach((entity) => {\n        entity.move();\n      });\n    };\n\n    render.addEntity = (entity) => { entities.all.push(entity); };\n\n\n\n\n    render.update = () => {\n      entities.update();\n      let entitySpritesMap = entities.sprites();\n\n      let ctx = engine.canvas.getContext('2d');\n\n      ctx.clearRect(0, 0, engine.canvas.width, engine.canvas.height);\n\n      let drawColorGroup = (sprites, color) => {\n\n        sprites.forEach( (sprite) => {\n          ctx.beginPath();\n          ctx.fillStyle = color;\n          sprite.draw(ctx);\n          ctx.fill();\n          ctx.closePath();\n        });\n\n      };\n      entitySpritesMap.forEach(drawColorGroup);\n    };\n\n\n\n    return render;\n  };\n\n  engine.render = renderService();\n\n  return engine;\n};\n\ngame.engine = engineService();\n;class Sprite {\n  constructor({type, position, color, radius=40}) {\n    switch(type) {\n      case 'circle':\n        this.draw = function(ctx) {\n          ctx.arc(this.position.x, this.position.y, this.radius, 0, 2*Math.PI);\n        };\n        break;\n    }\n    this.type = type;\n    this.position = position;\n    this.color = color;\n    this.radius = radius;\n  }\n}\n;var canvas = document.getElementById(\"slitherbots-canvas\");\n\nconsole.log(game);\n\ngame.engine.initialize({canvas: canvas});\ngame.engine.logCanvas();\n\nlet canvasCenter = {x: canvas.width/2, y: canvas.height/2};\n\nlet slitherbot = new Creature({position: canvasCenter, length: 50, direction: 100});\n\ngame.engine.render.addEntity(slitherbot);\n\nlet count = 0;\nlet direction = 1;\n\nwindow.setInterval( () => {\n  if(count%10===0) { direction+=0.2; slitherbot.updateDirection(direction); }\n  count++;\n  window.requestAnimationFrame(game.engine.render.update);\n}, 5);\n\n/*\nvar ctx = c.getContext(\"2d\");\nctx.fillStyle = \"#FF0000\";\nctx.fillRect(0,0,150,75);\n*/\n"]}